= Biomart

http://biomart.rubyforge.org

http://github.com/dazoakley/biomart-ruby

Biomart provides a simple interface for working with Biomart servers 
(see http://www.biomart.org for more info on Biomart itself), so you 
don't have to get down and dirty with the basic webservice calls yourself.

== Install

sudo gem install biomart

== Usage

  require "rubygems"
  require "biomart"
  
To generically connect to a Biomart server and have access to all of its 
information and meta data:
  
  biomart = Biomart::Server.new( "http://www.biomart.org/biomart" )
  
  # List all of the available datasets on this Biomart server
  puts "#{biomart.datasets}"
  
  
  
  
  ... More to come ...
  
  
  
  
Or if you know the dataset you wish to work with and would like to 
just get on with things...
  
  htgt_targ = Biomart::Dataset.new( "http://www.sanger.ac.uk/htgt/biomart", { :name => "htgt_targ" } )
  count = htgt_targ.count( :filters => { "is_eucomm" => "yes" } )
  p count
  
See Biomart module and Class docs for more detail.
  
== Using a Proxy

If you need to channel all of your requests via a proxy, specify your 
proxy via Biomart.proxy:

  Biomart.proxy = "http://proxy.example.com/"

Now all requests made through Biomart will be proxied via http://proxy.example.com/.

Alternatively you can also set your proxy url in the environment variable 
'http_proxy', and Biomart will automatically detect this.

== Meta

Written by Darren Oakley (daz dot oakley at gmail dot com)

Released under the MIT License: http://www.opensource.org/licenses/mit-license.php

http://biomart.rubyforge.org

http://github.com/dazoakley/biomart-ruby

